{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhi\\\\Downloads\\\\teeth_segmentation-svg_map\\\\teeth_segmentation-svg_map\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport teethSvgPaths from './teethSvgPaths';\nimport axios from 'axios';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:8000';\n\n// Session Management Class\nclass SessionManager {\n  constructor() {\n    this.sessionId = localStorage.getItem('segmentation_session_id');\n  }\n  async getSessionId() {\n    if (!this.sessionId) {\n      try {\n        const response = await axios.post(`${API_BASE}/api/session`);\n        this.sessionId = response.data.session_id;\n        localStorage.setItem('segmentation_session_id', this.sessionId);\n        console.log('Created new session:', this.sessionId);\n      } catch (error) {\n        console.error('Failed to create session:', error);\n        throw error;\n      }\n    }\n    return this.sessionId;\n  }\n  async createNewSession() {\n    try {\n      const response = await axios.post(`${API_BASE}/api/session`);\n      this.sessionId = response.data.session_id;\n      localStorage.setItem('segmentation_session_id', this.sessionId);\n      console.log('Created new session for upload:', this.sessionId);\n      return this.sessionId;\n    } catch (error) {\n      console.error('Failed to create new session:', error);\n      throw error;\n    }\n  }\n  getHeaders() {\n    const headers = {};\n    if (this.sessionId) {\n      headers['X-Session-ID'] = this.sessionId;\n    }\n    return headers;\n  }\n  async apiCall(url, config = {}) {\n    await this.getSessionId();\n    const headers = {\n      ...this.getHeaders(),\n      ...config.headers\n    };\n    try {\n      return await axios({\n        ...config,\n        url,\n        headers\n      });\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response2$data2;\n      // If session not found, clear it and retry once with a new session\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404 && (_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && (_error$response2$data2 = _error$response2$data.detail) !== null && _error$response2$data2 !== void 0 && _error$response2$data2.includes('Session not found')) {\n        console.warn('Session expired, creating new session');\n        this.clearSession();\n        await this.getSessionId(); // Create new session\n        const newHeaders = {\n          ...this.getHeaders(),\n          ...config.headers\n        };\n        return axios({\n          ...config,\n          url,\n          headers: newHeaders\n        });\n      }\n      throw error;\n    }\n  }\n  clearSession() {\n    this.sessionId = null;\n    localStorage.removeItem('segmentation_session_id');\n  }\n  getCurrentSessionId() {\n    return this.sessionId;\n  }\n}\nfunction App() {\n  _s();\n  var _fileInfo$shape;\n  const teethPositions = [\n  // Coordinates refined for a smoother, more symmetrical overlay on the dental chart.\n  // The origin (x:0, y:0) corresponds to the top-left of the container.\n\n  // Upper Arch (Teeth 1-16, Patient's Upper Right to Upper Left)\n  {\n    id: 1,\n    x: 85.74,\n    y: 74.31\n  }, {\n    id: 2,\n    x: 84.95,\n    y: 63.2\n  }, {\n    id: 3,\n    x: 84.35,\n    y: 51.32\n  }, {\n    id: 4,\n    x: 81.97,\n    y: 41.36\n  }, {\n    id: 5,\n    x: 79.79,\n    y: 32.93\n  }, {\n    id: 6,\n    x: 78.2,\n    y: 25.27\n  }, {\n    id: 7,\n    x: 74.43,\n    y: 17.61\n  }, {\n    id: 8,\n    x: 68.88,\n    y: 12.62\n  }, {\n    id: 9,\n    x: 62.33,\n    y: 11.86\n  }, {\n    id: 10,\n    x: 57.17,\n    y: 19.14\n  }, {\n    id: 11,\n    x: 53.4,\n    y: 25.27\n  }, {\n    id: 12,\n    x: 51.81,\n    y: 32.93\n  }, {\n    id: 13,\n    x: 48.84,\n    y: 40.98\n  }, {\n    id: 14,\n    x: 47.25,\n    y: 51.7\n  }, {\n    id: 15,\n    x: 46.06,\n    y: 61.67\n  }, {\n    id: 16,\n    x: 45.66,\n    y: 72.78\n  },\n  // Lower Arch (Teeth 17-32, Patient's Lower Left to Lower Right)\n  {\n    id: 17,\n    x: -4.93,\n    y: 66.65\n  }, {\n    id: 18,\n    x: -3.54,\n    y: 53.24\n  }, {\n    id: 19,\n    x: -2.55,\n    y: 41.36\n  }, {\n    id: 20,\n    x: -0.17,\n    y: 31.78\n  }, {\n    id: 21,\n    x: 2.81,\n    y: 23.74\n  }, {\n    id: 22,\n    x: 6.38,\n    y: 19.14\n  }, {\n    id: 23,\n    x: 9.75,\n    y: 16.07\n  }, {\n    id: 24,\n    x: 13.12,\n    y: 13.01\n  }, {\n    id: 25,\n    x: 16.5,\n    y: 13.39\n  }, {\n    id: 26,\n    x: 20.27,\n    y: 14.92\n  }, {\n    id: 27,\n    x: 24.04,\n    y: 18.37\n  }, {\n    id: 28,\n    x: 27.41,\n    y: 23.35\n  }, {\n    id: 29,\n    x: 30.19,\n    y: 31.4\n  }, {\n    id: 30,\n    x: 32.57,\n    y: 41.36\n  }, {\n    id: 31,\n    x: 33.36,\n    y: 53.24\n  }, {\n    id: 32,\n    x: 34.75,\n    y: 67.8\n  }].map(p => ({\n    ...p,\n    x: p.x + 10,\n    y: p.y + 5\n  }));\n\n  // State management\n  const [file, setFile] = useState(null);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [currentAxis, setCurrentAxis] = useState(2); // Start with axial\n  const [currentSlice, setCurrentSlice] = useState(0);\n  const [sliceData, setSliceData] = useState(null);\n  const [markedPoints, setMarkedPoints] = useState([]);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [status, setStatus] = useState({\n    type: '',\n    message: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [segmentationFiles, setSegmentationFiles] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [selectedPointNumber, setSelectedPointNumber] = useState(null);\n  const [bridgeMode, setBridgeMode] = useState(false);\n  const [implantMode, setImplantMode] = useState(false);\n  const [allPoints, setAllPoints] = useState({}); // Store all points globally\n  const [colorTemplate, setColorTemplate] = useState([]); // Store color template\n\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const sessionManagerRef = useRef(new SessionManager());\n  const axisNames = ['Sagittal', 'Coronal', 'Axial'];\n\n  // Initialize session and restore state on component mount\n  useEffect(() => {\n    const initializeSession = async () => {\n      try {\n        const sessionId = await sessionManagerRef.current.getSessionId();\n        setSessionId(sessionId);\n        setStatus({\n          type: 'info',\n          message: `Session initialized: ${sessionId.substring(0, 8)}... (Upload a file to begin)`\n        });\n\n        // Fetch color template\n        await fetchColorTemplate();\n\n        // Try to restore session state (but only if there's existing data)\n        await restoreSessionState();\n      } catch (error) {\n        setStatus({\n          type: 'error',\n          message: 'Failed to initialize session'\n        });\n      }\n    };\n    initializeSession();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Restore session state from backend\n  const restoreSessionState = async () => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/status`, {\n        method: 'GET'\n      });\n      const sessionData = response.data;\n      console.log('Session data:', sessionData);\n\n      // If file is already uploaded in this session\n      if (sessionData.file_uploaded && sessionData.file_info) {\n        setFileInfo(sessionData.file_info);\n        setFile({\n          name: sessionData.file_info.filename || 'Uploaded file'\n        }); // Create a mock file object\n        setTotalPoints(sessionData.total_points || 0);\n\n        // Restore current view state\n        const restoredAxis = sessionData.current_axis !== undefined ? sessionData.current_axis : 2;\n        const restoredSlice = sessionData.current_slice !== undefined ? sessionData.current_slice : 0;\n        setCurrentAxis(restoredAxis);\n        setCurrentSlice(restoredSlice);\n\n        // Check if segmentation files exist\n        if (sessionData.segmentation_files_exist) {\n          setSegmentationFiles(true);\n        }\n        setStatus({\n          type: 'success',\n          message: `Session restored: ${sessionData.file_info.filename || 'file'} loaded with ${sessionData.total_points || 0} points`\n        });\n\n        // Load the current slice\n        setTimeout(() => {\n          loadSlice(restoredAxis, restoredSlice, sessionData.file_info);\n        }, 100);\n      }\n    } catch (error) {\n      var _error$response3;\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404) {\n        console.log('Session expired or not found, starting fresh');\n        // Update session ID display\n        const newSessionId = sessionManagerRef.current.getCurrentSessionId();\n        setSessionId(newSessionId);\n      } else {\n        var _error$response4;\n        console.log('No previous session state to restore:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status);\n      }\n      // This is normal for new sessions, don't show error\n    }\n  };\n\n  // Upload file\n  const handleFileUpload = async selectedFile => {\n    if (!selectedFile) return;\n\n    // Validate file type\n    const isNifti = selectedFile.name.toLowerCase().endsWith('.nii') || selectedFile.name.toLowerCase().endsWith('.nii.gz');\n    const isDicom = selectedFile.name.toLowerCase().endsWith('.dcm');\n    const isDicomZip = selectedFile.name.toLowerCase().endsWith('.zip');\n    if (!isNifti && !isDicom && !isDicomZip) {\n      setStatus({\n        type: 'error',\n        message: 'Invalid file type. Please upload .nii, .nii.gz, a DICOM .zip, or select any .dcm file in a DICOM series folder.'\n      });\n      return;\n    }\n\n    // Check file size (500MB limit)\n    const maxSize = 500 * 1024 * 1024; // 500MB\n    if (selectedFile.size > maxSize) {\n      setStatus({\n        type: 'error',\n        message: `File too large (${(selectedFile.size / (1024 * 1024)).toFixed(1)}MB). Maximum size is 500MB.`\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      var _response$data$shape;\n      // Create a new session for each file upload\n      setStatus({\n        type: 'info',\n        message: 'Creating new session for upload...'\n      });\n      const newSessionId = await sessionManagerRef.current.createNewSession();\n      setSessionId(newSessionId);\n\n      // Reset state for new session\n      setFile(null);\n      setFileInfo(null);\n      setSliceData(null);\n      setMarkedPoints([]);\n      setTotalPoints(0);\n      setSegmentationFiles(false);\n      setCurrentAxis(2);\n      setCurrentSlice(0);\n      setSelectedPointNumber(null);\n      setAllPoints({});\n\n      // Fetch color template for new session\n      await fetchColorTemplate();\n      setStatus({\n        type: 'info',\n        message: `Uploading ${selectedFile.name} (${(selectedFile.size / (1024 * 1024)).toFixed(1)}MB)...`\n      });\n      const formData = new FormData();\n      // If DICOM file, collect all .dcm files in the folder and zip them\n      if (isDicom && selectedFile.webkitRelativePath) {\n        // User selected a folder, collect all .dcm files\n        // This requires input type=\"file\" with webkitdirectory attribute\n        // For now, just upload the selected file\n        formData.append('file', selectedFile);\n      } else if (isDicom) {\n        // Just upload the selected .dcm file\n        formData.append('file', selectedFile);\n      } else {\n        formData.append('file', selectedFile);\n      }\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/upload`, {\n        method: 'POST',\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 120000,\n        // 2 minute timeout for large files\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setStatus({\n            type: 'info',\n            message: `Uploading... ${percentCompleted}%`\n          });\n        }\n      });\n      setFile(selectedFile);\n      setFileInfo(response.data);\n      setCurrentSlice(0);\n      setStatus({\n        type: 'success',\n        message: `File uploaded successfully! Shape: ${(_response$data$shape = response.data.shape) === null || _response$data$shape === void 0 ? void 0 : _response$data$shape.join(' × ')} (New Session: ${newSessionId.substring(0, 8)}...)`\n      });\n      console.log('Upload successful, calling loadSlice with:', {\n        currentAxis,\n        fileInfo: response.data\n      });\n\n      // Load initial slice - pass fileInfo directly to avoid state timing issues\n      setTimeout(() => {\n        console.log('setTimeout callback executing');\n        loadSlice(2, 0, response.data); // Always start with axial view, slice 0\n      }, 100);\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Upload error:', error);\n      let errorMessage = 'Failed to upload file';\n      if ((_error$response5 = error.response) !== null && _error$response5 !== void 0 && (_error$response5$data = _error$response5.data) !== null && _error$response5$data !== void 0 && _error$response5$data.detail) {\n        errorMessage = error.response.data.detail;\n      } else if (error.code === 'ECONNABORTED') {\n        errorMessage = 'Upload timeout. Please try with a smaller file.';\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setStatus({\n        type: 'error',\n        message: errorMessage\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load slice data\n  const loadSlice = async (axis, sliceIndex, providedFileInfo = null) => {\n    const currentFileInfo = providedFileInfo || fileInfo;\n    console.log('loadSlice called:', {\n      axis,\n      sliceIndex,\n      fileInfo: currentFileInfo\n    });\n    if (!currentFileInfo) {\n      console.log('No fileInfo available, skipping loadSlice');\n      return;\n    }\n    try {\n      console.log('Making API call to:', `${API_BASE}/api/slice/${axis}/${sliceIndex}`);\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/slice/${axis}/${sliceIndex}`, {\n        method: 'GET'\n      });\n      console.log('Slice data received:', response.data);\n      setSliceData(response.data);\n      setMarkedPoints(response.data.marked_points || []);\n\n      // Also fetch all points globally for the status table\n      await fetchAllPoints();\n      drawSlice(response.data.slice_data, response.data.marked_points || [], axis);\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error('Error loading slice:', error);\n      setStatus({\n        type: 'error',\n        message: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || 'Failed to load slice'\n      });\n    }\n  };\n\n  // Fetch all points globally for status table\n  const fetchAllPoints = async () => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/points`, {\n        method: 'GET'\n      });\n\n      // Organize points by point number\n      const pointsMap = {};\n      if (response.data.points) {\n        response.data.points.forEach(point => {\n          pointsMap[point.point_number] = point;\n        });\n      }\n      setAllPoints(pointsMap);\n    } catch (error) {\n      console.error('Error fetching all points:', error);\n    }\n  };\n\n  // Fetch color template from backend\n  const fetchColorTemplate = async () => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/color_template`, {\n        method: 'GET'\n      });\n      setColorTemplate(response.data.color_template);\n    } catch (error) {\n      console.error('Error fetching color template:', error);\n    }\n  };\n\n  // Draw slice on canvas\n  const drawSlice = (data, points, axis = currentAxis) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !data) return;\n    const ctx = canvas.getContext('2d');\n    const height = data.length;\n    const width = data[0].length;\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Create image data\n    const imageData = ctx.createImageData(width, height);\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const value = data[y][x];\n        const index = (y * width + x) * 4;\n        imageData.data[index] = value; // R\n        imageData.data[index + 1] = value; // G\n        imageData.data[index + 2] = value; // B\n        imageData.data[index + 3] = 255; // A\n      }\n    }\n    ctx.putImageData(imageData, 0, 0);\n\n    // --- START: Added code for orientation labels ---\n    const orientationLabels = {\n      // Labels for [Top, Bottom, Left, Right]\n      0: ['A', 'P', 'R', 'L'],\n      // Sagittal view (S->R, I->L)\n      1: ['R', 'L', 'S', 'I'],\n      // Coronal view\n      2: ['R', 'L', 'A', 'P'] // Axial view (as in the reference image)\n    };\n    const currentLabels = orientationLabels[axis];\n    if (!currentLabels) return; // Do not draw if axis is unknown\n\n    ctx.fillStyle = '#00FFFF'; // Bright cyan, similar to reference crosshairs\n    ctx.font = 'bold 18px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    const margin = 10; // Distance from canvas edge\n\n    // Draw labels\n    ctx.fillText(currentLabels[0], width / 2, margin); // Top\n    ctx.fillText(currentLabels[1], width / 2, height - margin); // Bottom\n    ctx.fillText(currentLabels[2], margin, height / 2); // Left\n    ctx.fillText(currentLabels[3], width - margin, height / 2); // Right\n    // --- END: Added code for orientation labels ---\n\n    // Draw points\n    points.forEach((point, index) => {\n      // Use color from backend if available, otherwise default red\n      let pointColor = '#ff0000';\n      if (point.color) {\n        pointColor = `rgb(${point.color.r}, ${point.color.g}, ${point.color.b})`;\n      }\n      ctx.fillStyle = pointColor;\n      ctx.strokeStyle = '#ffffff';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, 3, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n\n      // Draw point number with contrasting color\n      ctx.fillStyle = '#000000';\n      ctx.strokeStyle = '#ffffff';\n      ctx.lineWidth = 1;\n      ctx.font = 'bold 12px Arial';\n      const text = String(point.point_number || index + 1);\n      ctx.strokeText(text, point.x + 6, point.y - 6);\n      ctx.fillText(text, point.x + 6, point.y - 6);\n    });\n  };\n\n  // Handle canvas click to mark points\n  const handleCanvasClick = async event => {\n    if (!sliceData) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const x = Math.round((event.clientX - rect.left) * scaleX);\n    const y = Math.round((event.clientY - rect.top) * scaleY);\n    try {\n      var _response$data$sessio;\n      const requestData = {\n        axis: currentAxis,\n        slice_index: currentSlice,\n        point: {\n          x,\n          y\n        }\n      };\n      // Bridge/Implant mode overrides point number\n      if (bridgeMode) {\n        requestData.point_number = 33;\n      } else if (implantMode) {\n        requestData.point_number = 34;\n      } else if (selectedPointNumber !== null) {\n        requestData.point_number = selectedPointNumber;\n      }\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/mark_point`, {\n        method: 'POST',\n        data: requestData\n      });\n      setTotalPoints(response.data.total_points);\n      setStatus({\n        type: 'success',\n        message: `Point ${response.data.point_number} marked successfully (Session: ${(_response$data$sessio = response.data.session_id) === null || _response$data$sessio === void 0 ? void 0 : _response$data$sessio.substring(0, 8)}...)`\n      });\n      // Clear selection after marking (unless bridge/implant mode)\n      if (!bridgeMode && !implantMode) setSelectedPointNumber(null);\n      // Reload slice to show updated points\n      loadSlice(currentAxis, currentSlice);\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      setStatus({\n        type: 'error',\n        message: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.detail) || 'Failed to mark point'\n      });\n    }\n  };\n\n  // Remove a specific point\n  const removePoint = async pointNumber => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/remove_point/${pointNumber}`, {\n        method: 'DELETE'\n      });\n      setTotalPoints(response.data.total_points);\n      setStatus({\n        type: 'success',\n        message: `Point ${pointNumber} removed successfully`\n      });\n\n      // Reload slice to show updated points\n      loadSlice(currentAxis, currentSlice);\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      setStatus({\n        type: 'error',\n        message: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.detail) || 'Failed to remove point'\n      });\n    }\n  };\n\n  // Select a point number for marking\n  const selectPointForMarking = pointNumber => {\n    setSelectedPointNumber(pointNumber);\n    setStatus({\n      type: 'info',\n      message: `Point ${pointNumber} selected for marking. Click on the image to place it.`\n    });\n  };\n\n  // Navigation functions\n  const changeSlice = direction => {\n    if (!sliceData) return;\n    const newSlice = currentSlice + direction;\n    if (newSlice >= 0 && newSlice < sliceData.max_slices) {\n      setCurrentSlice(newSlice);\n      loadSlice(currentAxis, newSlice);\n    }\n  };\n  const changeAxis = newAxis => {\n    setCurrentAxis(newAxis);\n    setCurrentSlice(0);\n    loadSlice(newAxis, 0);\n  };\n\n  // Clear all points\n  const clearPoints = async () => {\n    try {\n      var _response$data$sessio2;\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/points`, {\n        method: 'DELETE'\n      });\n      setTotalPoints(0);\n      setMarkedPoints([]);\n      setAllPoints({});\n      setSelectedPointNumber(null);\n      setStatus({\n        type: 'success',\n        message: `All points cleared (Session: ${(_response$data$sessio2 = response.data.session_id) === null || _response$data$sessio2 === void 0 ? void 0 : _response$data$sessio2.substring(0, 8)}...)`\n      });\n      loadSlice(currentAxis, currentSlice);\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      setStatus({\n        type: 'error',\n        message: ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.detail) || 'Failed to clear points'\n      });\n    }\n  };\n\n  // Run segmentation\n  const runSegmentation = async () => {\n    if (totalPoints === 0) {\n      setStatus({\n        type: 'error',\n        message: 'No points marked for segmentation'\n      });\n      return;\n    }\n    setLoading(true);\n    setSegmentationFiles(false); // Disable download button during processing\n    setStatus({\n      type: 'info',\n      message: 'Running segmentation... This may take a few minutes.'\n    });\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/run_segmentation`, {\n        method: 'POST'\n      });\n      if (response.data.status === 'success') {\n        setSegmentationFiles(true);\n        setStatus({\n          type: 'success',\n          message: 'Segmentation complete! Ready to download.'\n        });\n      } else {\n        setStatus({\n          type: 'error',\n          message: response.data.message\n        });\n      }\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      setStatus({\n        type: 'error',\n        message: ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.detail) || 'Segmentation failed'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Download files\n  const downloadFile = async fileType => {\n    try {\n      const headers = sessionManagerRef.current.getHeaders();\n      const response = await axios.get(`${API_BASE}/api/download/${fileType}`, {\n        headers,\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const blob = new Blob([response.data]);\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n\n      // Extract filename from response headers or use default\n      const contentDisposition = response.headers['content-disposition'];\n      let filename = `segmentation_${fileType}.${fileType === 'segmentation' ? 'nii.gz' : 'txt'}`;\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"?(.+)\"?/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      setStatus({\n        type: 'success',\n        message: `Downloaded ${filename}`\n      });\n    } catch (error) {\n      var _error$response1, _error$response1$data;\n      setStatus({\n        type: 'error',\n        message: ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.detail) || `Failed to download ${fileType}`\n      });\n    }\n  };\n\n  // Session management functions\n  const createNewSession = async () => {\n    try {\n      sessionManagerRef.current.clearSession();\n      const newSessionId = await sessionManagerRef.current.getSessionId();\n      setSessionId(newSessionId);\n\n      // Reset state for new session\n      setFile(null);\n      setFileInfo(null);\n      setSliceData(null);\n      setMarkedPoints([]);\n      setTotalPoints(0);\n      setSegmentationFiles(false);\n      setSelectedPointNumber(null);\n      setAllPoints({});\n\n      // Fetch color template for new session\n      await fetchColorTemplate();\n      setStatus({\n        type: 'success',\n        message: `New session created: ${newSessionId.substring(0, 8)}...`\n      });\n    } catch (error) {\n      setStatus({\n        type: 'error',\n        message: 'Failed to create new session'\n      });\n    }\n  };\n\n  // Drag and drop handlers\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.currentTarget.classList.add('dragover');\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n\n  // Keyboard navigation\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!sliceData) return;\n      switch (e.key) {\n        case 'a':\n        case 'A':\n        case 'ArrowLeft':\n          changeSlice(-1);\n          break;\n        case 'd':\n        case 'D':\n        case 'ArrowRight':\n          changeSlice(1);\n          break;\n        case 'w':\n        case 'W':\n        case 'ArrowUp':\n          changeAxis((currentAxis + 1) % 3);\n          break;\n        case 's':\n        case 'S':\n        case 'ArrowDown':\n          changeAxis((currentAxis + 2) % 3);\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentAxis, currentSlice, sliceData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Interactive 3D Teeth Segmentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload a NIfTI file, mark teeth points, and generate segmentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-info\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: createNewSession,\n            title: \"Create new session\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"new-session-icon\",\n              style: {\n                marginRight: '8px'\n              },\n              children: \"\\uD83D\\uDD04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 15\n            }, this), \"New Session\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this), status.message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-message status-${status.type}`,\n      children: status.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewer-section\",\n        children: [!file ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload NIfTI or DICOM Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag and drop a .nii, .nii.gz, DICOM .zip, or any .dcm file from a DICOM series folder here, or click to browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px',\n              color: '#666',\n              marginTop: '10px'\n            },\n            children: [\"\\uD83D\\uDD04 Each upload creates a fresh session with clean state\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"DICOM series:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this), \" Select any .dcm file in the folder containing the series.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 95\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Advanced:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this), \" You can also upload a zipped folder of DICOM files.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            type: \"file\",\n            accept: \".nii,.nii.gz,.dcm,.zip\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => {\n              if (e.target.files.length === 1) {\n                handleFileUpload(e.target.files[0]);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            id: \"dicom-folder-input\",\n            webkitdirectory: \"true\",\n            multiple: true,\n            onChange: async e => {\n              const files = Array.from(e.target.files);\n              const dicomFiles = files.filter(f => f.name.toLowerCase().endsWith('.dcm'));\n              if (dicomFiles.length > 1) {\n                const JSZip = (await import('jszip')).default;\n                const zip = new JSZip();\n                dicomFiles.forEach(f => zip.file(f.name, f));\n                zip.generateAsync({\n                  type: 'blob'\n                }).then(blob => {\n                  const zippedFile = new File([blob], 'dicom_series.zip', {\n                    type: 'application/zip'\n                  });\n                  handleFileUpload(zippedFile);\n                });\n              } else if (dicomFiles.length === 1) {\n                handleFileUpload(dicomFiles[0]);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              style: {\n                marginRight: '10px'\n              },\n              children: \"Upload File (.nii, .nii.gz, .dcm, .zip)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => document.getElementById('dicom-folder-input').click(),\n              children: \"Upload DICOM Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slice-viewer\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"slice-canvas\",\n            onClick: handleCanvasClick,\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              imageRendering: 'pixelated'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this), sliceData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"point-status-map\",\n          style: {\n            background: '#fff',\n            borderRadius: '20px',\n            boxShadow: '0 4px 24px rgba(0,0,0,0.08)',\n            padding: '32px 32px 24px 32px',\n            width: '760px',\n            minHeight: '480px',\n            margin: '32px auto',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Point Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px',\n              color: '#666',\n              marginBottom: '10px'\n            },\n            children: \"Select a tooth to mark it, or click a marked tooth to remove it.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '16px',\n              marginBottom: '18px',\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-toggle ${bridgeMode ? 'btn-bridge-active' : 'btn-bridge'}`,\n              style: {\n                padding: '10px 24px',\n                borderRadius: '8px',\n                fontWeight: 'bold',\n                fontSize: '16px',\n                background: bridgeMode ? 'linear-gradient(90deg,#e2b987,#c9a06b)' : '#f5f5f5',\n                color: bridgeMode ? '#222' : '#8a6d3b',\n                border: bridgeMode ? '2px solid #e2b987' : '2px solid #d6c1a3',\n                boxShadow: bridgeMode ? '0 2px 8px rgba(226,185,135,0.15)' : '0 1px 4px rgba(0,0,0,0.06)',\n                cursor: 'pointer',\n                transition: 'all 0.2s'\n              },\n              onClick: () => {\n                setBridgeMode(!bridgeMode);\n                if (!bridgeMode) setImplantMode(false);\n              },\n              title: \"Bridge Mode: Mark multiple bridge points\",\n              children: \"\\uD83E\\uDDB7 Bridge Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-toggle ${implantMode ? 'btn-implant-active' : 'btn-implant'}`,\n              style: {\n                padding: '10px 24px',\n                borderRadius: '8px',\n                fontWeight: 'bold',\n                fontSize: '16px',\n                background: implantMode ? 'linear-gradient(90deg,#7fff00,#b2ffb2)' : '#f5f5f5',\n                color: implantMode ? '#222' : '#228b22',\n                border: implantMode ? '2px solid #7fff00' : '2px solid #b2ffb2',\n                boxShadow: implantMode ? '0 2px 8px rgba(127,255,0,0.15)' : '0 1px 4px rgba(0,0,0,0.06)',\n                cursor: 'pointer',\n                transition: 'all 0.2s'\n              },\n              onClick: () => {\n                setImplantMode(!implantMode);\n                if (!implantMode) setBridgeMode(false);\n              },\n              title: \"Implant Mode: Mark multiple implant points\",\n              children: \"\\uD83E\\uDDB7 Implant Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"teeth-map-container\",\n            style: {\n              width: '600px',\n              height: '336px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '0 auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"teeth-map\",\n              style: {\n                position: 'relative',\n                width: '600px',\n                height: '336px',\n                // 252/450*600 = 336 to maintain aspect ratio\n                backgroundImage: 'url(/teeth_map.png)',\n                backgroundSize: 'contain',\n                backgroundRepeat: 'no-repeat',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 640 268.8\",\n                width: \"600\",\n                height: \"336\",\n                style: {\n                  position: 'absolute',\n                  left: 0,\n                  top: 0,\n                  width: '600px',\n                  height: '336px',\n                  pointerEvents: 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"g\", {\n                  id: \"teeth-bg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 640 268.8\",\n                width: \"600\",\n                height: \"336\",\n                style: {\n                  position: 'absolute',\n                  left: 0,\n                  top: 0,\n                  width: '600px',\n                  height: '336px',\n                  pointerEvents: 'auto'\n                },\n                children: teethSvgPaths.map(({\n                  id,\n                  d\n                }) => {\n                  const pointNum = id;\n                  const isMarked = allPoints[pointNum] !== undefined;\n                  const isSelected = selectedPointNumber === pointNum;\n                  let pointColor = 'rgba(255,255,255,0.7)';\n                  if (colorTemplate.length > 0 && pointNum <= colorTemplate.length) {\n                    const templateColor = colorTemplate[pointNum - 1];\n                    pointColor = `rgb(${templateColor.r},${templateColor.g},${templateColor.b})`;\n                  }\n                  if (isMarked && allPoints[pointNum].color) {\n                    pointColor = `rgb(${allPoints[pointNum].color.r},${allPoints[pointNum].color.g},${allPoints[pointNum].color.b})`;\n                  }\n                  // Add neumorphic shadow to unselected, unmarked teeth\n                  const neumorphStyle = !isMarked && !isSelected ? {\n                    filter: 'drop-shadow(2px 2px 3px rgba(255,220,220,0.5)) drop-shadow(-2px -2px 3px rgba(255,255,255,0.5))'\n                    // Note: SVG does not support box-shadow, so use filter: drop-shadow for similar effect\n                  } : {};\n                  return /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: d,\n                    fill: isMarked ? pointColor : isSelected ? '#ffe066' : 'rgba(255,255,255,0.7)',\n                    stroke: isSelected ? '#007bff' : isMarked ? '#333' : '#bbb',\n                    strokeWidth: isSelected ? 2 : 1,\n                    style: {\n                      cursor: 'pointer',\n                      transition: 'fill 0.2s, stroke 0.2s',\n                      ...neumorphStyle\n                    },\n                    onClick: e => {\n                      e.stopPropagation();\n                      if (isMarked) {\n                        removePoint(pointNum);\n                      } else {\n                        selectPointForMarking(pointNum);\n                      }\n                    },\n                    title: `Tooth ${pointNum}`\n                  }, pointNum, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 950,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 15\n          }, this), (bridgeMode || implantMode) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-point-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '13px',\n                color: bridgeMode ? '#b48a4a' : '#228b22',\n                marginTop: '10px',\n                fontWeight: 'bold'\n              },\n              children: bridgeMode ? 'Bridge Mode Active: Click on the 3D view to mark bridge points (label 33).' : 'Implant Mode Active: Click on the 3D view to mark implant points (label 34).'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-secondary\",\n              onClick: () => {\n                setBridgeMode(false);\n                setImplantMode(false);\n              },\n              style: {\n                marginTop: '5px'\n              },\n              children: [\"Exit \", bridgeMode ? 'Bridge' : 'Implant', \" Mode\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 17\n          }, this), selectedPointNumber && !bridgeMode && !implantMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-point-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '12px',\n                color: '#007bff',\n                marginTop: '10px'\n              },\n              children: [\"Point \", selectedPointNumber, \" selected. Click on the 3D view to place it.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-secondary\",\n              onClick: () => setSelectedPointNumber(null),\n              style: {\n                marginTop: '5px'\n              },\n              children: \"Cancel Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-section\",\n        children: [fileInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"File Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-display\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Shape: \", (_fileInfo$shape = fileInfo.shape) === null || _fileInfo$shape === void 0 ? void 0 : _fileInfo$shape.join(' × ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 13\n        }, this), sliceData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Current View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Axis: \", axisNames[currentAxis]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1027,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Slice: \", currentSlice + 1, \" / \", sliceData.max_slices]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Points on slice: \", markedPoints.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Total points: \", totalPoints]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Navigation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: axisNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn ${currentAxis === index ? 'btn-primary' : 'btn-secondary'}`,\n                onClick: () => changeAxis(index),\n                children: name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#666',\n                marginTop: '10px'\n              },\n              children: \"Keys: A/D or \\u2190/\\u2192 = prev/next slice, W/S or \\u2191/\\u2193 = change axis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: clearPoints,\n              disabled: totalPoints === 0,\n              style: {\n                marginTop: '10px'\n              },\n              children: \"Clear All Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Segmentation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: runSegmentation,\n              disabled: totalPoints === 0 || loading,\n              style: {\n                width: '100%',\n                marginBottom: '10px'\n              },\n              children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1076,\n                  columnNumber: 23\n                }, this), \"Processing...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 21\n              }, this) : 'Run Segmentation'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 17\n            }, this), segmentationFiles && !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => downloadFile('segmentation'),\n              style: {\n                width: '100%'\n              },\n              children: \"Download NIfTI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 19\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar-fill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1097,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#666'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"1. Upload a NIfTI file (.nii or .nii.gz)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"   \\u2192 Each upload creates a fresh session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"2. Navigate through slices and axes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"3. Click on teeth to mark points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"4. Run segmentation to generate results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"5. Download the segmented files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: '10px',\n                fontStyle: 'italic'\n              },\n              children: \"\\uD83D\\uDCA1 Fresh session = Clean slate for each file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 730,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S8qiHy7FQEui8ckdUK+F3qs6pPQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","teethSvgPaths","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","NODE_ENV","SessionManager","constructor","sessionId","localStorage","getItem","getSessionId","response","post","data","session_id","setItem","console","log","error","createNewSession","getHeaders","headers","apiCall","url","config","_error$response","_error$response2","_error$response2$data","_error$response2$data2","status","detail","includes","warn","clearSession","newHeaders","removeItem","getCurrentSessionId","App","_s","_fileInfo$shape","teethPositions","id","x","y","map","p","file","setFile","fileInfo","setFileInfo","currentAxis","setCurrentAxis","currentSlice","setCurrentSlice","sliceData","setSliceData","markedPoints","setMarkedPoints","totalPoints","setTotalPoints","setStatus","type","message","loading","setLoading","segmentationFiles","setSegmentationFiles","setSessionId","selectedPointNumber","setSelectedPointNumber","bridgeMode","setBridgeMode","implantMode","setImplantMode","allPoints","setAllPoints","colorTemplate","setColorTemplate","canvasRef","fileInputRef","sessionManagerRef","axisNames","initializeSession","current","substring","fetchColorTemplate","restoreSessionState","method","sessionData","file_uploaded","file_info","name","filename","total_points","restoredAxis","current_axis","undefined","restoredSlice","current_slice","segmentation_files_exist","setTimeout","loadSlice","_error$response3","newSessionId","_error$response4","handleFileUpload","selectedFile","isNifti","toLowerCase","endsWith","isDicom","isDicomZip","maxSize","size","toFixed","_response$data$shape","formData","FormData","webkitRelativePath","append","timeout","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","shape","join","_error$response5","_error$response5$data","errorMessage","code","axis","sliceIndex","providedFileInfo","currentFileInfo","marked_points","fetchAllPoints","drawSlice","slice_data","_error$response6","_error$response6$data","pointsMap","points","forEach","point","point_number","color_template","canvas","ctx","getContext","height","length","width","imageData","createImageData","value","index","putImageData","orientationLabels","currentLabels","fillStyle","font","textAlign","textBaseline","margin","fillText","pointColor","color","r","g","b","strokeStyle","lineWidth","beginPath","arc","PI","fill","stroke","text","String","strokeText","handleCanvasClick","event","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","_response$data$sessio","requestData","slice_index","_error$response7","_error$response7$data","removePoint","pointNumber","_error$response8","_error$response8$data","selectPointForMarking","changeSlice","direction","newSlice","max_slices","changeAxis","newAxis","clearPoints","_response$data$sessio2","_error$response9","_error$response9$data","runSegmentation","_error$response0","_error$response0$data","downloadFile","fileType","get","responseType","blob","Blob","window","URL","createObjectURL","link","document","createElement","href","contentDisposition","filenameMatch","match","download","body","appendChild","click","removeChild","revokeObjectURL","_error$response1","_error$response1$data","handleDragOver","e","preventDefault","currentTarget","classList","add","handleDragLeave","remove","handleDrop","files","dataTransfer","handleKeyPress","key","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","role","style","marginRight","fontSize","marginTop","ref","accept","display","onChange","target","webkitdirectory","multiple","Array","from","dicomFiles","filter","f","JSZip","default","zip","generateAsync","then","zippedFile","File","_fileInputRef$current","getElementById","maxWidth","imageRendering","background","borderRadius","boxShadow","padding","minHeight","flexDirection","alignItems","justifyContent","marginBottom","gap","fontWeight","border","cursor","transition","position","backgroundImage","backgroundSize","backgroundRepeat","viewBox","pointerEvents","d","pointNum","isMarked","isSelected","templateColor","neumorphStyle","strokeWidth","stopPropagation","disabled","fontStyle","_c","$RefreshReg$"],"sources":["C:/Users/nikhi/Downloads/teeth_segmentation-svg_map/teeth_segmentation-svg_map/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport teethSvgPaths from './teethSvgPaths';\nimport axios from 'axios';\nimport './index.css';\n\nconst API_BASE = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:8000';\n\n// Session Management Class\nclass SessionManager {\n  constructor() {\n    this.sessionId = localStorage.getItem('segmentation_session_id');\n  }\n\n  async getSessionId() {\n    if (!this.sessionId) {\n      try {\n        const response = await axios.post(`${API_BASE}/api/session`);\n        this.sessionId = response.data.session_id;\n        localStorage.setItem('segmentation_session_id', this.sessionId);\n        console.log('Created new session:', this.sessionId);\n      } catch (error) {\n        console.error('Failed to create session:', error);\n        throw error;\n      }\n    }\n    return this.sessionId;\n  }\n\n  async createNewSession() {\n    try {\n      const response = await axios.post(`${API_BASE}/api/session`);\n      this.sessionId = response.data.session_id;\n      localStorage.setItem('segmentation_session_id', this.sessionId);\n      console.log('Created new session for upload:', this.sessionId);\n      return this.sessionId;\n    } catch (error) {\n      console.error('Failed to create new session:', error);\n      throw error;\n    }\n  }\n\n  getHeaders() {\n    const headers = {};\n    if (this.sessionId) {\n      headers['X-Session-ID'] = this.sessionId;\n    }\n    return headers;\n  }\n\n  async apiCall(url, config = {}) {\n    await this.getSessionId();\n    const headers = { ...this.getHeaders(), ...config.headers };\n    \n    try {\n      return await axios({ ...config, url, headers });\n    } catch (error) {\n      // If session not found, clear it and retry once with a new session\n      if (error.response?.status === 404 && error.response?.data?.detail?.includes('Session not found')) {\n        console.warn('Session expired, creating new session');\n        this.clearSession();\n        await this.getSessionId(); // Create new session\n        const newHeaders = { ...this.getHeaders(), ...config.headers };\n        return axios({ ...config, url, headers: newHeaders });\n      }\n      throw error;\n    }\n  }\n\n  clearSession() {\n    this.sessionId = null;\n    localStorage.removeItem('segmentation_session_id');\n  }\n\n  getCurrentSessionId() {\n    return this.sessionId;\n  }\n}\n\nfunction App() {\n  const teethPositions = [\n  // Coordinates refined for a smoother, more symmetrical overlay on the dental chart.\n  // The origin (x:0, y:0) corresponds to the top-left of the container.\n\n  // Upper Arch (Teeth 1-16, Patient's Upper Right to Upper Left)\n  { id: 1, x: 85.74, y: 74.31 },   { id: 2, x: 84.95, y: 63.2 },   { id: 3, x: 84.35, y: 51.32 },   { id: 4, x: 81.97, y: 41.36 }, \n  { id: 5, x: 79.79, y: 32.93 },   { id: 6, x: 78.2, y: 25.27 },   { id: 7, x: 74.43, y: 17.61 },   { id: 8, x: 68.88, y: 12.62 }, \n  { id: 9, x: 62.33, y: 11.86 },   { id: 10, x: 57.17, y: 19.14 },   { id: 11, x: 53.4, y: 25.27 },   { id: 12, x: 51.81, y: 32.93 }, \n  { id: 13, x: 48.84, y: 40.98 },   { id: 14, x: 47.25, y: 51.7 },   { id: 15, x: 46.06, y: 61.67 },   { id: 16, x: 45.66, y: 72.78 }, \n\n  // Lower Arch (Teeth 17-32, Patient's Lower Left to Lower Right)\n  { id: 17, x: -4.93, y: 66.65 },   { id: 18, x: -3.54, y: 53.24 },   { id: 19, x: -2.55, y: 41.36 },   { id: 20, x: -0.17, y: 31.78 }, \n  { id: 21, x: 2.81, y: 23.74 },   { id: 22, x: 6.38, y: 19.14 },   { id: 23, x: 9.75, y: 16.07 },   { id: 24, x: 13.12, y: 13.01 }, \n  { id: 25, x: 16.5, y: 13.39 },   { id: 26, x: 20.27, y: 14.92 },   { id: 27, x: 24.04, y: 18.37 },   { id: 28, x: 27.41, y: 23.35 }, \n  { id: 29, x: 30.19, y: 31.4 },   { id: 30, x: 32.57, y: 41.36 },   { id: 31, x: 33.36, y: 53.24 },   { id: 32, x: 34.75, y: 67.8 },\n\n].map(p => ({ ...p, x: p.x + 10, y: p.y + 5 }));\n\n  // State management\n  const [file, setFile] = useState(null);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [currentAxis, setCurrentAxis] = useState(2); // Start with axial\n  const [currentSlice, setCurrentSlice] = useState(0);\n  const [sliceData, setSliceData] = useState(null);\n  const [markedPoints, setMarkedPoints] = useState([]);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [status, setStatus] = useState({ type: '', message: '' });\n  const [loading, setLoading] = useState(false);\n  const [segmentationFiles, setSegmentationFiles] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [selectedPointNumber, setSelectedPointNumber] = useState(null);\n  const [bridgeMode, setBridgeMode] = useState(false);\n  const [implantMode, setImplantMode] = useState(false);\n  const [allPoints, setAllPoints] = useState({}); // Store all points globally\n  const [colorTemplate, setColorTemplate] = useState([]); // Store color template\n  \n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const sessionManagerRef = useRef(new SessionManager());\n  \n  const axisNames = ['Sagittal', 'Coronal', 'Axial'];\n\n  // Initialize session and restore state on component mount\n  useEffect(() => {\n    const initializeSession = async () => {\n      try {\n        const sessionId = await sessionManagerRef.current.getSessionId();\n        setSessionId(sessionId);\n        setStatus({ type: 'info', message: `Session initialized: ${sessionId.substring(0, 8)}... (Upload a file to begin)` });\n        \n        // Fetch color template\n        await fetchColorTemplate();\n        \n        // Try to restore session state (but only if there's existing data)\n        await restoreSessionState();\n      } catch (error) {\n        setStatus({ type: 'error', message: 'Failed to initialize session' });\n      }\n    };\n    \n    initializeSession();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Restore session state from backend\n  const restoreSessionState = async () => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/status`, {\n        method: 'GET'\n      });\n      \n      const sessionData = response.data;\n      console.log('Session data:', sessionData);\n      \n      // If file is already uploaded in this session\n      if (sessionData.file_uploaded && sessionData.file_info) {\n        setFileInfo(sessionData.file_info);\n        setFile({ name: sessionData.file_info.filename || 'Uploaded file' }); // Create a mock file object\n        setTotalPoints(sessionData.total_points || 0);\n        \n        // Restore current view state\n        const restoredAxis = sessionData.current_axis !== undefined ? sessionData.current_axis : 2;\n        const restoredSlice = sessionData.current_slice !== undefined ? sessionData.current_slice : 0;\n        \n        setCurrentAxis(restoredAxis);\n        setCurrentSlice(restoredSlice);\n        \n        // Check if segmentation files exist\n        if (sessionData.segmentation_files_exist) {\n          setSegmentationFiles(true);\n        }\n        \n        setStatus({ \n          type: 'success', \n          message: `Session restored: ${sessionData.file_info.filename || 'file'} loaded with ${sessionData.total_points || 0} points` \n        });\n        \n        // Load the current slice\n        setTimeout(() => {\n          loadSlice(restoredAxis, restoredSlice, sessionData.file_info);\n        }, 100);\n      }\n    } catch (error) {\n      if (error.response?.status === 404) {\n        console.log('Session expired or not found, starting fresh');\n        // Update session ID display\n        const newSessionId = sessionManagerRef.current.getCurrentSessionId();\n        setSessionId(newSessionId);\n      } else {\n        console.log('No previous session state to restore:', error.response?.status);\n      }\n      // This is normal for new sessions, don't show error\n    }\n  };\n  \n  // Upload file\n  const handleFileUpload = async (selectedFile) => {\n    if (!selectedFile) return;\n    \n    // Validate file type\n    const isNifti = selectedFile.name.toLowerCase().endsWith('.nii') || selectedFile.name.toLowerCase().endsWith('.nii.gz');\n    const isDicom = selectedFile.name.toLowerCase().endsWith('.dcm');\n    const isDicomZip = selectedFile.name.toLowerCase().endsWith('.zip');\n    if (!isNifti && !isDicom && !isDicomZip) {\n      setStatus({ type: 'error', message: 'Invalid file type. Please upload .nii, .nii.gz, a DICOM .zip, or select any .dcm file in a DICOM series folder.' });\n      return;\n    }\n    \n    // Check file size (500MB limit)\n    const maxSize = 500 * 1024 * 1024; // 500MB\n    if (selectedFile.size > maxSize) {\n      setStatus({ type: 'error', message: `File too large (${(selectedFile.size / (1024*1024)).toFixed(1)}MB). Maximum size is 500MB.` });\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // Create a new session for each file upload\n      setStatus({ type: 'info', message: 'Creating new session for upload...' });\n      const newSessionId = await sessionManagerRef.current.createNewSession();\n      setSessionId(newSessionId);\n      \n      // Reset state for new session\n      setFile(null);\n      setFileInfo(null);\n      setSliceData(null);\n      setMarkedPoints([]);\n      setTotalPoints(0);\n      setSegmentationFiles(false);\n      setCurrentAxis(2);\n      setCurrentSlice(0);\n      setSelectedPointNumber(null);\n      setAllPoints({});\n      \n      // Fetch color template for new session\n      await fetchColorTemplate();\n      \n      setStatus({ type: 'info', message: `Uploading ${selectedFile.name} (${(selectedFile.size / (1024*1024)).toFixed(1)}MB)...` });\n      \n      const formData = new FormData();\n      // If DICOM file, collect all .dcm files in the folder and zip them\n      if (isDicom && selectedFile.webkitRelativePath) {\n        // User selected a folder, collect all .dcm files\n        // This requires input type=\"file\" with webkitdirectory attribute\n        // For now, just upload the selected file\n        formData.append('file', selectedFile);\n      } else if (isDicom) {\n        // Just upload the selected .dcm file\n        formData.append('file', selectedFile);\n      } else {\n        formData.append('file', selectedFile);\n      }\n\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/upload`, {\n        method: 'POST',\n        data: formData,\n        headers: { 'Content-Type': 'multipart/form-data' },\n        timeout: 120000, // 2 minute timeout for large files\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setStatus({ type: 'info', message: `Uploading... ${percentCompleted}%` });\n        }\n      });\n      \n      setFile(selectedFile);\n      setFileInfo(response.data);\n      setCurrentSlice(0);\n      setStatus({ \n        type: 'success', \n        message: `File uploaded successfully! Shape: ${response.data.shape?.join(' × ')} (New Session: ${newSessionId.substring(0, 8)}...)` \n      });\n      \n      console.log('Upload successful, calling loadSlice with:', { currentAxis, fileInfo: response.data });\n      \n      // Load initial slice - pass fileInfo directly to avoid state timing issues\n      setTimeout(() => {\n        console.log('setTimeout callback executing');\n        loadSlice(2, 0, response.data); // Always start with axial view, slice 0\n      }, 100);\n      \n    } catch (error) {\n      console.error('Upload error:', error);\n      let errorMessage = 'Failed to upload file';\n      \n      if (error.response?.data?.detail) {\n        errorMessage = error.response.data.detail;\n      } else if (error.code === 'ECONNABORTED') {\n        errorMessage = 'Upload timeout. Please try with a smaller file.';\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      setStatus({ type: 'error', message: errorMessage });\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Load slice data\n  const loadSlice = async (axis, sliceIndex, providedFileInfo = null) => {\n    const currentFileInfo = providedFileInfo || fileInfo;\n    console.log('loadSlice called:', { axis, sliceIndex, fileInfo: currentFileInfo });\n    if (!currentFileInfo) {\n      console.log('No fileInfo available, skipping loadSlice');\n      return;\n    }\n\n    try {\n      console.log('Making API call to:', `${API_BASE}/api/slice/${axis}/${sliceIndex}`);\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/slice/${axis}/${sliceIndex}`, {\n        method: 'GET'\n      });\n      console.log('Slice data received:', response.data);\n      setSliceData(response.data);\n      setMarkedPoints(response.data.marked_points || []);\n      \n      // Also fetch all points globally for the status table\n      await fetchAllPoints();\n      \n      drawSlice(response.data.slice_data, response.data.marked_points || [], axis);\n    } catch (error) {\n      console.error('Error loading slice:', error);\n      setStatus({ \n        type: 'error', \n        message: error.response?.data?.detail || 'Failed to load slice' \n      });\n    }\n  };\n\n  // Fetch all points globally for status table\n  const fetchAllPoints = async () => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/points`, {\n        method: 'GET'\n      });\n      \n      // Organize points by point number\n      const pointsMap = {};\n      if (response.data.points) {\n        response.data.points.forEach(point => {\n          pointsMap[point.point_number] = point;\n        });\n      }\n      setAllPoints(pointsMap);\n      \n    } catch (error) {\n      console.error('Error fetching all points:', error);\n    }\n  };\n  \n  // Fetch color template from backend\n  const fetchColorTemplate = async () => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/color_template`, {\n        method: 'GET'\n      });\n      \n      setColorTemplate(response.data.color_template);\n      \n    } catch (error) {\n      console.error('Error fetching color template:', error);\n    }\n  };\n  \n  // Draw slice on canvas\n  const drawSlice = (data, points, axis = currentAxis) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !data) return;\n\n    const ctx = canvas.getContext('2d');\n    const height = data.length;\n    const width = data[0].length;\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Create image data\n    const imageData = ctx.createImageData(width, height);\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const value = data[y][x];\n        const index = (y * width + x) * 4;\n        imageData.data[index] = value;     // R\n        imageData.data[index + 1] = value; // G\n        imageData.data[index + 2] = value; // B\n        imageData.data[index + 3] = 255;   // A\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n\n    // --- START: Added code for orientation labels ---\n    const orientationLabels = {\n      // Labels for [Top, Bottom, Left, Right]\n      0: ['A', 'P', 'R', 'L'], // Sagittal view (S->R, I->L)\n      1: ['R', 'L', 'S', 'I'], // Coronal view\n      2: ['R', 'L', 'A', 'P']  // Axial view (as in the reference image)\n    };\n\n    const currentLabels = orientationLabels[axis];\n    if (!currentLabels) return; // Do not draw if axis is unknown\n\n    ctx.fillStyle = '#00FFFF'; // Bright cyan, similar to reference crosshairs\n    ctx.font = 'bold 18px sans-serif';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    const margin = 10; // Distance from canvas edge\n\n    // Draw labels\n    ctx.fillText(currentLabels[0], width / 2, margin);        // Top\n    ctx.fillText(currentLabels[1], width / 2, height - margin); // Bottom\n    ctx.fillText(currentLabels[2], margin, height / 2);        // Left\n    ctx.fillText(currentLabels[3], width - margin, height / 2); // Right\n    // --- END: Added code for orientation labels ---\n\n    // Draw points\n    points.forEach((point, index) => {\n      // Use color from backend if available, otherwise default red\n      let pointColor = '#ff0000';\n      if (point.color) {\n        pointColor = `rgb(${point.color.r}, ${point.color.g}, ${point.color.b})`;\n      }\n\n      ctx.fillStyle = pointColor;\n      ctx.strokeStyle = '#ffffff';\n      ctx.lineWidth = 1;\n\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, 3, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n\n      // Draw point number with contrasting color\n      ctx.fillStyle = '#000000';\n      ctx.strokeStyle = '#ffffff';\n      ctx.lineWidth = 1;\n      ctx.font = 'bold 12px Arial';\n      const text = String(point.point_number || index + 1);\n      ctx.strokeText(text, point.x + 6, point.y - 6);\n      ctx.fillText(text, point.x + 6, point.y - 6);\n    });\n  };\n  \n  // Handle canvas click to mark points\n  const handleCanvasClick = async (event) => {\n    if (!sliceData) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const x = Math.round((event.clientX - rect.left) * scaleX);\n    const y = Math.round((event.clientY - rect.top) * scaleY);\n    try {\n      const requestData = {\n        axis: currentAxis,\n        slice_index: currentSlice,\n        point: { x, y }\n      };\n      // Bridge/Implant mode overrides point number\n      if (bridgeMode) {\n        requestData.point_number = 33;\n      } else if (implantMode) {\n        requestData.point_number = 34;\n      } else if (selectedPointNumber !== null) {\n        requestData.point_number = selectedPointNumber;\n      }\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/mark_point`, {\n        method: 'POST',\n        data: requestData\n      });\n      setTotalPoints(response.data.total_points);\n      setStatus({ \n        type: 'success', \n        message: `Point ${response.data.point_number} marked successfully (Session: ${response.data.session_id?.substring(0, 8)}...)` \n      });\n      // Clear selection after marking (unless bridge/implant mode)\n      if (!bridgeMode && !implantMode) setSelectedPointNumber(null);\n      // Reload slice to show updated points\n      loadSlice(currentAxis, currentSlice);\n    } catch (error) {\n      setStatus({ \n        type: 'error', \n        message: error.response?.data?.detail || 'Failed to mark point' \n      });\n    }\n  };\n\n  // Remove a specific point\n  const removePoint = async (pointNumber) => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/remove_point/${pointNumber}`, {\n        method: 'DELETE'\n      });\n      \n      setTotalPoints(response.data.total_points);\n      setStatus({ \n        type: 'success', \n        message: `Point ${pointNumber} removed successfully` \n      });\n      \n      // Reload slice to show updated points\n      loadSlice(currentAxis, currentSlice);\n      \n    } catch (error) {\n      setStatus({ \n        type: 'error', \n        message: error.response?.data?.detail || 'Failed to remove point' \n      });\n    }\n  };\n\n  // Select a point number for marking\n  const selectPointForMarking = (pointNumber) => {\n    setSelectedPointNumber(pointNumber);\n    setStatus({ \n      type: 'info', \n      message: `Point ${pointNumber} selected for marking. Click on the image to place it.` \n    });\n  };\n  \n  // Navigation functions\n  const changeSlice = (direction) => {\n    if (!sliceData) return;\n    \n    const newSlice = currentSlice + direction;\n    if (newSlice >= 0 && newSlice < sliceData.max_slices) {\n      setCurrentSlice(newSlice);\n      loadSlice(currentAxis, newSlice);\n    }\n  };\n  \n  const changeAxis = (newAxis) => {\n    setCurrentAxis(newAxis);\n    setCurrentSlice(0);\n    loadSlice(newAxis, 0);\n  };\n  \n  // Clear all points\n  const clearPoints = async () => {\n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/points`, {\n        method: 'DELETE'\n      });\n      setTotalPoints(0);\n      setMarkedPoints([]);\n      setAllPoints({});\n      setSelectedPointNumber(null);\n      setStatus({ \n        type: 'success', \n        message: `All points cleared (Session: ${response.data.session_id?.substring(0, 8)}...)` \n      });\n      loadSlice(currentAxis, currentSlice);\n    } catch (error) {\n      setStatus({ \n        type: 'error', \n        message: error.response?.data?.detail || 'Failed to clear points' \n      });\n    }\n  };\n  \n  // Run segmentation\n  const runSegmentation = async () => {\n    if (totalPoints === 0) {\n      setStatus({ type: 'error', message: 'No points marked for segmentation' });\n      return;\n    }\n    \n    setLoading(true);\n    setSegmentationFiles(false); // Disable download button during processing\n    setStatus({ type: 'info', message: 'Running segmentation... This may take a few minutes.' });\n    \n    try {\n      const response = await sessionManagerRef.current.apiCall(`${API_BASE}/api/run_segmentation`, {\n        method: 'POST'\n      });\n      \n      if (response.data.status === 'success') {\n        setSegmentationFiles(true);\n        setStatus({ \n          type: 'success', \n          message: 'Segmentation complete! Ready to download.' \n        });\n      } else {\n        setStatus({ \n          type: 'error', \n          message: response.data.message \n        });\n      }\n    } catch (error) {\n      setStatus({ \n        type: 'error', \n        message: error.response?.data?.detail || 'Segmentation failed' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Download files\n  const downloadFile = async (fileType) => {\n    try {\n      const headers = sessionManagerRef.current.getHeaders();\n      const response = await axios.get(`${API_BASE}/api/download/${fileType}`, {\n        headers,\n        responseType: 'blob'\n      });\n      \n      // Create download link\n      const blob = new Blob([response.data]);\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      \n      // Extract filename from response headers or use default\n      const contentDisposition = response.headers['content-disposition'];\n      let filename = `segmentation_${fileType}.${fileType === 'segmentation' ? 'nii.gz' : 'txt'}`;\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"?(.+)\"?/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n      \n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n      setStatus({ type: 'success', message: `Downloaded ${filename}` });\n    } catch (error) {\n      setStatus({ \n        type: 'error', \n        message: error.response?.data?.detail || `Failed to download ${fileType}` \n      });\n    }\n  };\n\n  // Session management functions\n  const createNewSession = async () => {\n    try {\n      sessionManagerRef.current.clearSession();\n      const newSessionId = await sessionManagerRef.current.getSessionId();\n      setSessionId(newSessionId);\n      \n      // Reset state for new session\n      setFile(null);\n      setFileInfo(null);\n      setSliceData(null);\n      setMarkedPoints([]);\n      setTotalPoints(0);\n      setSegmentationFiles(false);\n      setSelectedPointNumber(null);\n      setAllPoints({});\n      \n      // Fetch color template for new session\n      await fetchColorTemplate();\n      \n      setStatus({ \n        type: 'success', \n        message: `New session created: ${newSessionId.substring(0, 8)}...` \n      });\n    } catch (error) {\n      setStatus({ type: 'error', message: 'Failed to create new session' });\n    }\n  };\n\n  \n  \n  // Drag and drop handlers\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.currentTarget.classList.add('dragover');\n  };\n  \n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n  };\n  \n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  };\n  \n  // Keyboard navigation\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!sliceData) return;\n      \n      switch (e.key) {\n        case 'a':\n        case 'A':\n        case 'ArrowLeft':\n          changeSlice(-1);\n          break;\n        case 'd':\n        case 'D':\n        case 'ArrowRight':\n          changeSlice(1);\n          break;\n        case 'w':\n        case 'W':\n        case 'ArrowUp':\n          changeAxis((currentAxis + 1) % 3);\n          break;\n        case 's':\n        case 'S':\n        case 'ArrowDown':\n          changeAxis((currentAxis + 2) % 3);\n          break;\n        default:\n          break;\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentAxis, currentSlice, sliceData]);\n  \n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1>Interactive 3D Teeth Segmentation</h1>\n            <p>Upload a NIfTI file, mark teeth points, and generate segmentation</p>\n          </div>\n          <div className=\"session-info\">\n            <button \n              className=\"btn btn-primary\"\n              onClick={createNewSession}\n              title=\"Create new session\"\n            >\n              <span role=\"img\" aria-label=\"new-session-icon\" style={{ marginRight: '8px' }}>🔄</span>\n              New Session\n            </button>\n          </div>\n        </div>\n      </header>\n      \n      {status.message && (\n        <div className={`status-message status-${status.type}`}>\n          {status.message}\n        </div>\n      )}\n      \n      <div className=\"main-content\">\n        <div className=\"viewer-section\">\n          {!file ? (\n            <div \n              className=\"upload-area\"\n            >\n              <h3>Upload NIfTI or DICOM Series</h3>\n              <p>Drag and drop a .nii, .nii.gz, DICOM .zip, or any .dcm file from a DICOM series folder here, or click to browse</p>\n              <p style={{ fontSize: '12px', color: '#666', marginTop: '10px' }}>\n                🔄 Each upload creates a fresh session with clean state<br />\n                <b>DICOM series:</b> Select any .dcm file in the folder containing the series.<br />\n                <b>Advanced:</b> You can also upload a zipped folder of DICOM files.\n              </p>\n              {/* File upload for NIfTI, DICOM single file, or zip */}\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\".nii,.nii.gz,.dcm,.zip\"\n                style={{ display: 'none' }}\n                onChange={e => {\n                  if (e.target.files.length === 1) {\n                    handleFileUpload(e.target.files[0]);\n                  }\n                }}\n              />\n              {/* Folder upload for DICOM series */}\n              <input\n                type=\"file\"\n                style={{ display: 'none' }}\n                id=\"dicom-folder-input\"\n                webkitdirectory=\"true\"\n                multiple\n                onChange={async (e) => {\n                  const files = Array.from(e.target.files);\n                  const dicomFiles = files.filter(f => f.name.toLowerCase().endsWith('.dcm'));\n                  if (dicomFiles.length > 1) {\n                    const JSZip = (await import('jszip')).default;\n                    const zip = new JSZip();\n                    dicomFiles.forEach(f => zip.file(f.name, f));\n                    zip.generateAsync({ type: 'blob' }).then(blob => {\n                      const zippedFile = new File([blob], 'dicom_series.zip', { type: 'application/zip' });\n                      handleFileUpload(zippedFile);\n                    });\n                  } else if (dicomFiles.length === 1) {\n                    handleFileUpload(dicomFiles[0]);\n                  }\n                }}\n              />\n              <div style={{ marginTop: '10px' }}>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => fileInputRef.current?.click()}\n                  style={{ marginRight: '10px' }}\n                >\n                  Upload File (.nii, .nii.gz, .dcm, .zip)\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => document.getElementById('dicom-folder-input').click()}\n                >\n                  Upload DICOM Folder\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"slice-viewer\">\n              <canvas\n                ref={canvasRef}\n                className=\"slice-canvas\"\n                onClick={handleCanvasClick}\n                style={{ \n                  maxWidth: '100%', \n                  height: 'auto',\n                  imageRendering: 'pixelated'\n                }}\n              />\n            </div>\n          )}\n          \n          {/* Point Status Map */}\n          {sliceData && (\n            <div className=\"point-status-map\" style={{\n              background: '#fff',\n              borderRadius: '20px',\n              boxShadow: '0 4px 24px rgba(0,0,0,0.08)',\n              padding: '32px 32px 24px 32px',\n              width: '760px',\n              minHeight: '480px',\n              margin: '32px auto',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}>\n              <h3>Point Status</h3>\n              <p style={{ fontSize: '12px', color: '#666', marginBottom: '10px' }}>\n                Select a tooth to mark it, or click a marked tooth to remove it.\n              </p>\n              {/* Bridge/Implant toggle buttons */}\n              <div style={{ display: 'flex', gap: '16px', marginBottom: '18px', justifyContent: 'center' }}>\n                <button\n                  className={`btn btn-toggle ${bridgeMode ? 'btn-bridge-active' : 'btn-bridge'}`}\n                  style={{\n                    padding: '10px 24px',\n                    borderRadius: '8px',\n                    fontWeight: 'bold',\n                    fontSize: '16px',\n                    background: bridgeMode ? 'linear-gradient(90deg,#e2b987,#c9a06b)' : '#f5f5f5',\n                    color: bridgeMode ? '#222' : '#8a6d3b',\n                    border: bridgeMode ? '2px solid #e2b987' : '2px solid #d6c1a3',\n                    boxShadow: bridgeMode ? '0 2px 8px rgba(226,185,135,0.15)' : '0 1px 4px rgba(0,0,0,0.06)',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s',\n                  }}\n                  onClick={() => {\n                    setBridgeMode(!bridgeMode);\n                    if (!bridgeMode) setImplantMode(false);\n                  }}\n                  title=\"Bridge Mode: Mark multiple bridge points\"\n                >\n                  🦷 Bridge Mode\n                </button>\n                <button\n                  className={`btn btn-toggle ${implantMode ? 'btn-implant-active' : 'btn-implant'}`}\n                  style={{\n                    padding: '10px 24px',\n                    borderRadius: '8px',\n                    fontWeight: 'bold',\n                    fontSize: '16px',\n                    background: implantMode ? 'linear-gradient(90deg,#7fff00,#b2ffb2)' : '#f5f5f5',\n                    color: implantMode ? '#222' : '#228b22',\n                    border: implantMode ? '2px solid #7fff00' : '2px solid #b2ffb2',\n                    boxShadow: implantMode ? '0 2px 8px rgba(127,255,0,0.15)' : '0 1px 4px rgba(0,0,0,0.06)',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s',\n                  }}\n                  onClick={() => {\n                    setImplantMode(!implantMode);\n                    if (!implantMode) setBridgeMode(false);\n                  }}\n                  title=\"Implant Mode: Mark multiple implant points\"\n                >\n                  🦷 Implant Mode\n                </button>\n              </div>\n              <div className=\"teeth-map-container\" style={{ width: '600px', height: '336px', display: 'flex', justifyContent: 'center', alignItems: 'center', margin: '0 auto' }}>\n                <div\n                  className=\"teeth-map\"\n                  style={{\n                    position: 'relative',\n                    width: '600px',\n                    height: '336px', // 252/450*600 = 336 to maintain aspect ratio\n                    backgroundImage: 'url(/teeth_map.png)',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat',\n                    margin: '0 auto',\n                  }}\n                >\n                  {/* Inline SVG for teeth map, each path is a clickable tooth */}\n                  <svg\n                    viewBox=\"0 0 640 268.8\"\n                    width=\"600\"\n                    height=\"336\"\n                    style={{ position: 'absolute', left: 0, top: 0, width: '600px', height: '336px', pointerEvents: 'none' }}\n                  >\n                    {/* Background paths for visual reference, not interactive */}\n                    <g id=\"teeth-bg\">\n                      {/* Optionally, add a faded background or outline here if needed */}\n                    </g>\n                  </svg>\n                  <svg\n                    viewBox=\"0 0 640 268.8\"\n                    width=\"600\"\n                    height=\"336\"\n                    style={{ position: 'absolute', left: 0, top: 0, width: '600px', height: '336px', pointerEvents: 'auto' }}\n                  >\n                    {teethSvgPaths.map(({ id, d }) => {\n                      const pointNum = id;\n                      const isMarked = allPoints[pointNum] !== undefined;\n                      const isSelected = selectedPointNumber === pointNum;\n                      let pointColor = 'rgba(255,255,255,0.7)';\n                      if (colorTemplate.length > 0 && pointNum <= colorTemplate.length) {\n                        const templateColor = colorTemplate[pointNum - 1];\n                        pointColor = `rgb(${templateColor.r},${templateColor.g},${templateColor.b})`;\n                      }\n                      if (isMarked && allPoints[pointNum].color) {\n                        pointColor = `rgb(${allPoints[pointNum].color.r},${allPoints[pointNum].color.g},${allPoints[pointNum].color.b})`;\n                      }\n                      // Add neumorphic shadow to unselected, unmarked teeth\n                      const neumorphStyle = !isMarked && !isSelected ? {\n                        filter: 'drop-shadow(2px 2px 3px rgba(255,220,220,0.5)) drop-shadow(-2px -2px 3px rgba(255,255,255,0.5))',\n                        // Note: SVG does not support box-shadow, so use filter: drop-shadow for similar effect\n                      } : {};\n                      return (\n                        <path\n                          key={pointNum}\n                          d={d}\n                          fill={isMarked ? pointColor : (isSelected ? '#ffe066' : 'rgba(255,255,255,0.7)')}\n                          stroke={isSelected ? '#007bff' : (isMarked ? '#333' : '#bbb')}\n                          strokeWidth={isSelected ? 2 : 1}\n                          style={{ cursor: 'pointer', transition: 'fill 0.2s, stroke 0.2s', ...neumorphStyle }}\n                          onClick={e => {\n                            e.stopPropagation();\n                            if (isMarked) {\n                              removePoint(pointNum);\n                            } else {\n                              selectPointForMarking(pointNum);\n                            }\n                          }}\n                          title={`Tooth ${pointNum}`}\n                        />\n                      );\n                    })}\n                    {/* ...existing code... */}\n                  </svg>\n                </div>\n              </div>\n              {/* Bridge/Implant mode info */}\n              {(bridgeMode || implantMode) && (\n                <div className=\"selected-point-info\">\n                  <p style={{ fontSize: '13px', color: bridgeMode ? '#b48a4a' : '#228b22', marginTop: '10px', fontWeight: 'bold' }}>\n                    {bridgeMode ? 'Bridge Mode Active: Click on the 3D view to mark bridge points (label 33).' : 'Implant Mode Active: Click on the 3D view to mark implant points (label 34).'}\n                  </p>\n                  <button \n                    className=\"btn btn-sm btn-secondary\"\n                    onClick={() => { setBridgeMode(false); setImplantMode(false); }}\n                    style={{ marginTop: '5px' }}\n                  >\n                    Exit {bridgeMode ? 'Bridge' : 'Implant'} Mode\n                  </button>\n                </div>\n              )}\n              {selectedPointNumber && !bridgeMode && !implantMode && (\n                <div className=\"selected-point-info\">\n                  <p style={{ fontSize: '12px', color: '#007bff', marginTop: '10px' }}>\n                    Point {selectedPointNumber} selected. Click on the 3D view to place it.\n                  </p>\n                  <button \n                    className=\"btn btn-sm btn-secondary\"\n                    onClick={() => setSelectedPointNumber(null)}\n                    style={{ marginTop: '5px' }}\n                  >\n                    Cancel Selection\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {loading && (\n            <div className=\"loading\">\n              <p>Processing...</p>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"controls-section\">\n          {fileInfo && (\n            <div className=\"control-group\">\n              <h3>File Info</h3>\n              <div className=\"info-display\">\n                <div>Shape: {fileInfo.shape?.join(' × ')}</div>\n              </div>\n            </div>\n          )}\n          \n          {sliceData && (\n            <>\n              <div className=\"control-group\">\n                <h3>Current View</h3>\n                <div className=\"info-display\">\n                  <div>Axis: {axisNames[currentAxis]}</div>\n                  <div>Slice: {currentSlice + 1} / {sliceData.max_slices}</div>\n                  <div>Points on slice: {markedPoints.length}</div>\n                  <div>Total points: {totalPoints}</div>\n                </div>\n              </div>\n              \n              <div className=\"control-group\">\n                <h3>Navigation</h3>\n                \n                <div className=\"button-group\">\n                  {axisNames.map((name, index) => (\n                    <button\n                      key={index}\n                      className={`btn ${currentAxis === index ? 'btn-primary' : 'btn-secondary'}`}\n                      onClick={() => changeAxis(index)}\n                    >\n                      {name}\n                    </button>\n                  ))}\n                </div>\n                \n                <div style={{ fontSize: '12px', color: '#666', marginTop: '10px' }}>\n                  Keys: A/D or ←/→ = prev/next slice, W/S or ↑/↓ = change axis\n                </div>\n              </div>\n              \n              <div className=\"control-group\">\n                \n                <button \n                  className=\"btn btn-danger\"\n                  onClick={clearPoints}\n                  disabled={totalPoints === 0}\n                  style={{ marginTop: '10px' }}\n                >\n                  Clear All Points\n                </button>\n              </div>\n              \n              <div className=\"control-group\">\n                <h3>Segmentation</h3>\n                <button \n                  className=\"btn btn-success\"\n                  onClick={runSegmentation}\n                  disabled={totalPoints === 0 || loading}\n                  style={{ width: '100%', marginBottom: '10px' }}\n                >\n                  {loading ? (\n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '8px' }}>\n                      <div className=\"progress-spinner\"></div>\n                      Processing...\n                    </span>\n                  ) : (\n                    'Run Segmentation'\n                  )}\n                </button>\n                \n                {segmentationFiles && !loading && (\n                  <button \n                    className=\"btn btn-primary\"\n                    onClick={() => downloadFile('segmentation')}\n                    style={{ width: '100%' }}\n                  >\n                    Download NIfTI\n                  </button>\n                )}\n                \n                {loading && (\n                  <div className=\"progress-container\">\n                    <div className=\"progress-bar\">\n                      <div className=\"progress-bar-fill\"></div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n          \n          <div className=\"control-group\">\n            <h3>Instructions</h3>\n            <div style={{ fontSize: '12px', color: '#666' }}>\n              <p>1. Upload a NIfTI file (.nii or .nii.gz)</p>\n              <p>   → Each upload creates a fresh session</p>\n              <p>2. Navigate through slices and axes</p>\n              <p>3. Click on teeth to mark points</p>\n              <p>4. Run segmentation to generate results</p>\n              <p>5. Download the segmented files</p>\n              <p style={{ marginTop: '10px', fontStyle: 'italic' }}>\n                💡 Fresh session = Clean slate for each file\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}